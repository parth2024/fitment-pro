"""
Django settings for sdc project.

Generated by 'django-admin startproject' using Django 5.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("SECRET_KEY", "dev-secret")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv("DEBUG", "True").lower() == "true"

ALLOWED_HOSTS = ["*"]  # Allow all hosts for Replit environment


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework_simplejwt',
    'corsheaders',
    'django_filters',
    'django_celery_beat',
    'tenants',
    'workflow',
    'vcdb',
    'fitments',
    'fitment_uploads',
    'data_uploads',
    'field_config',
    'vcdb_categories',
    'products',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'sdc.cors_middleware.FixCorsCredentialsMiddleware',  # Fix duplicate CORS credentials header
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',  # Disabled for JWT authentication
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# Session configuration for authentication
SESSION_ENGINE = 'django.contrib.sessions.backends.db'
SESSION_COOKIE_AGE = 86400  # 24 hours
# SESSION_COOKIE_SECURE = True  # Set to True in production with HTTPS
SESSION_COOKIE_SECURE = False  # Set to False for localhost development
SESSION_COOKIE_HTTPONLY = True
# SESSION_COOKIE_SAMESITE = 'Lax'
SESSION_COOKIE_SAMESITE = 'None' 
ROOT_URLCONF = 'sdc.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'sdc.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': "fitmentpro_db",
        'USER': "fitmentpro_user",
        'PASSWORD': "fitmentpro_pass",
        'HOST': "ec2-65-0-133-50.ap-south-1.compute.amazonaws.com",
        # 'HOST': "localhost",
        'PORT': "5432",
        'OPTIONS': {
            'connect_timeout': 60,
            'options': '-c statement_timeout=300000',  # 5 minutes
        },
        'CONN_MAX_AGE': 0,  # Don't persist connections
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = []


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# CORS Configuration

CORS_ALLOW_CREDENTIALS = True

# Explicitly set CORS origins
CORS_ALLOWED_ORIGINS = [
    "https://fitment-pro-w23j.vercel.app",
    "http://localhost:3000",
    "http://localhost:5001",
    "http://127.0.0.1:3000",
    "http://127.0.0.1:5001",
    "http://localhost:8000",
    "http://127.0.0.1:8000",
    "http://localhost:8001",
    "http://127.0.0.1:8001",
]

# Allow all headers and methods
CORS_ALLOW_ALL_HEADERS = True
CORS_ALLOW_METHODS = [
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
]

# Explicitly set allowed headers to avoid conflicts
CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'x-tenant-id',
]

# CSRF trusted origins
CSRF_TRUSTED_ORIGINS = [
    "https://fitment-pro-w23j.vercel.app",
    "http://localhost:3000",
    "http://localhost:5001",
    "http://127.0.0.1:3000",
    "http://127.0.0.1:5001",
    "http://localhost:8000",
    "http://127.0.0.1:8000",
    "http://localhost:8001",
    "http://127.0.0.1:8001",
]

# Additional CORS settings to prevent header duplication
CORS_EXPOSE_HEADERS = [
    'content-type',
    'x-csrftoken',
]

# Ensure CORS preflight requests are handled correctly
CORS_PREFLIGHT_MAX_AGE = 86400  # 24 hours



REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated'
    ],
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer'
    ]
}

# JWT Configuration
from datetime import timedelta

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(hours=24),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,
    'UPDATE_LAST_LOGIN': True,
    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
    'VERIFYING_KEY': None,
    'AUDIENCE': None,
    'ISSUER': None,
    'JWK_URL': None,
    'LEEWAY': 0,
    'AUTH_HEADER_TYPES': ('Bearer',),
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',
    'USER_AUTHENTICATION_RULE': 'rest_framework_simplejwt.authentication.default_user_authentication_rule',
    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',
    'JTI_CLAIM': 'jti',
    'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',
    'SLIDING_TOKEN_LIFETIME': timedelta(hours=24),
    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=7),
}

# Azure AI Foundry settings
AZURE_OPENAI_API_KEY = os.getenv('AZURE_OPENAI_API_KEY', '')
AZURE_OPENAI_ENDPOINT = os.getenv('AZURE_OPENAI_ENDPOINT', '')
AZURE_OPENAI_API_VERSION = os.getenv('AZURE_OPENAI_API_VERSION', '2024-02-15-preview')
AZURE_OPENAI_DEPLOYMENT_NAME = os.getenv('AZURE_OPENAI_DEPLOYMENT_NAME', 'gpt-4')
AUTOCARE_CLIENT_ID = os.getenv('AUTOCARE_CLIENT_ID', '')
AUTOCARE_CLIENT_SECRET = os.getenv('AUTOCARE_CLIENT_SECRET', '')
AUTOCARE_USERNAME = os.getenv('AUTOCARE_USERNAME', '')
AUTOCARE_PASSWORD = os.getenv('AUTOCARE_PASSWORD', '')

# Media files
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Celery Configuration
CELERY_BROKER_URL = 'redis://localhost:6379/0'
CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'
# CELERY_BROKER_URL = 'redis://:fitment123@ec2-35-154-11-183.ap-south-1.compute.amazonaws.com:6379/0'
# CELERY_RESULT_BACKEND = 'redis://:fitment123@ec2-35-154-11-183.ap-south-1.compute.amazonaws.com:6379/0'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = TIME_ZONE
CELERY_TASK_TRACK_STARTED = True
CELERY_TASK_TIME_LIMIT = 30 * 60  # 30 minutes
CELERY_TASK_SOFT_TIME_LIMIT = 25 * 60  # 25 minutes
CELERY_WORKER_PREFETCH_MULTIPLIER = 1

# Improved Celery settings for better job processing
CELERY_TASK_ALWAYS_EAGER = False  # Ensure tasks are queued properly
CELERY_TASK_EAGER_PROPAGATES = True
CELERY_WORKER_CONCURRENCY = 2  # Limit concurrency to prevent overload
CELERY_WORKER_MAX_TASKS_PER_CHILD = 50  # Restart workers after 50 tasks
CELERY_TASK_REJECT_ON_WORKER_LOST = True  # Reject tasks if worker dies
CELERY_TASK_ACKS_LATE = True  # Acknowledge tasks only after completion
CELERY_WORKER_DISABLE_RATE_LIMITS = True  # Disable rate limits for immediate processing
CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP = True  # Retry connection on startup
CELERY_BROKER_CONNECTION_RETRY = True  # Retry connection if lost
CELERY_BROKER_CONNECTION_MAX_RETRIES = 10  # Max retry attempts

# Celery Beat Schedule
from .celery_beat_schedule import CELERY_BEAT_SCHEDULE, CELERY_BEAT_SCHEDULER

