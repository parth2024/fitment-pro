# Generated by Django 4.2.3 on 2025-10-17 09:53

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('vcdb', '0005_add_additional_vcdb_models'),
    ]

    operations = [
        migrations.CreateModel(
            name='EngineBase2',
            fields=[
                ('engine_base_id', models.IntegerField(primary_key=True, serialize=False)),
                ('engine_block_id', models.IntegerField()),
                ('engine_bore_stroke_id', models.IntegerField()),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Engine Base 2',
                'verbose_name_plural': 'Engine Base 2',
                'db_table': 'vcdb_enginebase2',
                'ordering': ['engine_base_id'],
            },
        ),
        migrations.CreateModel(
            name='EngineBlock',
            fields=[
                ('engine_block_id', models.IntegerField(primary_key=True, serialize=False)),
                ('liter', models.CharField(blank=True, max_length=20)),
                ('cc', models.CharField(blank=True, max_length=20)),
                ('cid', models.CharField(blank=True, max_length=20)),
                ('cylinders', models.CharField(blank=True, max_length=10)),
                ('block_type', models.CharField(blank=True, max_length=10)),
                ('culture_id', models.CharField(default='en-US', max_length=10)),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Engine Block',
                'verbose_name_plural': 'Engine Blocks',
                'db_table': 'vcdb_engineblock',
                'ordering': ['engine_block_id'],
            },
        ),
        migrations.CreateModel(
            name='EngineBoreStroke',
            fields=[
                ('engine_bore_stroke_id', models.IntegerField(primary_key=True, serialize=False)),
                ('eng_bore_in', models.CharField(blank=True, max_length=20)),
                ('eng_bore_metric', models.CharField(blank=True, max_length=20)),
                ('eng_stroke_in', models.CharField(blank=True, max_length=20)),
                ('eng_stroke_metric', models.CharField(blank=True, max_length=20)),
                ('culture_id', models.CharField(default='en-US', max_length=10)),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Engine Bore/Stroke',
                'verbose_name_plural': 'Engine Bore/Stroke',
                'db_table': 'vcdb_engineborestroke',
                'ordering': ['engine_bore_stroke_id'],
            },
        ),
        migrations.CreateModel(
            name='EngineDesignation',
            fields=[
                ('engine_designation_id', models.IntegerField(primary_key=True, serialize=False)),
                ('engine_designation_name', models.CharField(max_length=100)),
                ('culture_id', models.CharField(default='en-US', max_length=10)),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Engine Designation',
                'verbose_name_plural': 'Engine Designations',
                'db_table': 'vcdb_enginedesignation',
                'ordering': ['engine_designation_name'],
            },
        ),
        migrations.CreateModel(
            name='EngineVersion',
            fields=[
                ('engine_version_id', models.IntegerField(primary_key=True, serialize=False)),
                ('engine_version', models.CharField(max_length=100)),
                ('culture_id', models.CharField(default='en-US', max_length=10)),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Engine Version',
                'verbose_name_plural': 'Engine Versions',
                'db_table': 'vcdb_engineversion',
                'ordering': ['engine_version'],
            },
        ),
        migrations.CreateModel(
            name='EngineVIN',
            fields=[
                ('engine_vin_id', models.IntegerField(primary_key=True, serialize=False)),
                ('engine_vin_name', models.CharField(max_length=100)),
                ('culture_id', models.CharField(default='en-US', max_length=10)),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Engine VIN',
                'verbose_name_plural': 'Engine VINs',
                'db_table': 'vcdb_enginevin',
                'ordering': ['engine_vin_name'],
            },
        ),
        migrations.CreateModel(
            name='FuelDeliverySubType',
            fields=[
                ('fuel_delivery_sub_type_id', models.IntegerField(primary_key=True, serialize=False)),
                ('fuel_delivery_sub_type_name', models.CharField(max_length=100)),
                ('culture_id', models.CharField(default='en-US', max_length=10)),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Fuel Delivery SubType',
                'verbose_name_plural': 'Fuel Delivery SubTypes',
                'db_table': 'vcdb_fueldeliverysubtype',
                'ordering': ['fuel_delivery_sub_type_name'],
            },
        ),
        migrations.CreateModel(
            name='FuelDeliveryType',
            fields=[
                ('fuel_delivery_type_id', models.IntegerField(primary_key=True, serialize=False)),
                ('fuel_delivery_type_name', models.CharField(max_length=100)),
                ('culture_id', models.CharField(default='en-US', max_length=10)),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Fuel Delivery Type',
                'verbose_name_plural': 'Fuel Delivery Types',
                'db_table': 'vcdb_fueldeliverytype',
                'ordering': ['fuel_delivery_type_name'],
            },
        ),
        migrations.CreateModel(
            name='FuelSystemControlType',
            fields=[
                ('fuel_system_control_type_id', models.IntegerField(primary_key=True, serialize=False)),
                ('fuel_system_control_type_name', models.CharField(max_length=100)),
                ('culture_id', models.CharField(default='en-US', max_length=10)),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Fuel System Control Type',
                'verbose_name_plural': 'Fuel System Control Types',
                'db_table': 'vcdb_fuelsystemcontroltype',
                'ordering': ['fuel_system_control_type_name'],
            },
        ),
        migrations.CreateModel(
            name='FuelSystemDesign',
            fields=[
                ('fuel_system_design_id', models.IntegerField(primary_key=True, serialize=False)),
                ('fuel_system_design_name', models.CharField(max_length=100)),
                ('culture_id', models.CharField(default='en-US', max_length=10)),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Fuel System Design',
                'verbose_name_plural': 'Fuel System Designs',
                'db_table': 'vcdb_fuelsystemdesign',
                'ordering': ['fuel_system_design_name'],
            },
        ),
        migrations.CreateModel(
            name='IgnitionSystemType',
            fields=[
                ('ignition_system_type_id', models.IntegerField(primary_key=True, serialize=False)),
                ('ignition_system_type_name', models.CharField(max_length=100)),
                ('culture_id', models.CharField(default='en-US', max_length=10)),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Ignition System Type',
                'verbose_name_plural': 'Ignition System Types',
                'db_table': 'vcdb_ignitionsystemtype',
                'ordering': ['ignition_system_type_name'],
            },
        ),
        migrations.CreateModel(
            name='Mfr',
            fields=[
                ('mfr_id', models.IntegerField(primary_key=True, serialize=False)),
                ('mfr_name', models.CharField(max_length=150)),
                ('culture_id', models.CharField(default='en-US', max_length=10)),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Manufacturer',
                'verbose_name_plural': 'Manufacturers',
                'db_table': 'vcdb_mfr',
                'ordering': ['mfr_name'],
            },
        ),
        migrations.CreateModel(
            name='MfrBodyCode',
            fields=[
                ('mfr_body_code_id', models.IntegerField(primary_key=True, serialize=False)),
                ('mfr_body_code_name', models.CharField(max_length=100)),
                ('culture_id', models.CharField(default='en-US', max_length=10)),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Mfr Body Code',
                'verbose_name_plural': 'Mfr Body Codes',
                'db_table': 'vcdb_mfrbodycode',
                'ordering': ['mfr_body_code_name'],
            },
        ),
        migrations.CreateModel(
            name='PowerOutput',
            fields=[
                ('power_output_id', models.IntegerField(primary_key=True, serialize=False)),
                ('horse_power', models.CharField(blank=True, max_length=50)),
                ('kilowatt_power', models.CharField(blank=True, max_length=50)),
                ('culture_id', models.CharField(default='en-US', max_length=10)),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Power Output',
                'verbose_name_plural': 'Power Outputs',
                'db_table': 'vcdb_poweroutput',
                'ordering': ['power_output_id'],
            },
        ),
        migrations.CreateModel(
            name='SpringType',
            fields=[
                ('spring_type_id', models.IntegerField(primary_key=True, serialize=False)),
                ('spring_type_name', models.CharField(max_length=100)),
                ('culture_id', models.CharField(default='en-US', max_length=10)),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Spring Type',
                'verbose_name_plural': 'Spring Types',
                'db_table': 'vcdb_springtype',
                'ordering': ['spring_type_name'],
            },
        ),
        migrations.CreateModel(
            name='SpringTypeConfig',
            fields=[
                ('spring_type_config_id', models.IntegerField(primary_key=True, serialize=False)),
                ('front_spring_type_id', models.IntegerField()),
                ('rear_spring_type_id', models.IntegerField()),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Spring Type Config',
                'verbose_name_plural': 'Spring Type Configs',
                'db_table': 'vcdb_springtypeconfig',
                'ordering': ['spring_type_config_id'],
            },
        ),
        migrations.CreateModel(
            name='SteeringConfig',
            fields=[
                ('steering_config_id', models.IntegerField(primary_key=True, serialize=False)),
                ('steering_type_id', models.IntegerField()),
                ('steering_system_id', models.IntegerField()),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Steering Config',
                'verbose_name_plural': 'Steering Configs',
                'db_table': 'vcdb_steeringconfig',
                'ordering': ['steering_config_id'],
            },
        ),
        migrations.CreateModel(
            name='SteeringSystem',
            fields=[
                ('steering_system_id', models.IntegerField(primary_key=True, serialize=False)),
                ('steering_system_name', models.CharField(max_length=100)),
                ('culture_id', models.CharField(default='en-US', max_length=10)),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Steering System',
                'verbose_name_plural': 'Steering Systems',
                'db_table': 'vcdb_steeringsystem',
                'ordering': ['steering_system_name'],
            },
        ),
        migrations.CreateModel(
            name='SteeringType',
            fields=[
                ('steering_type_id', models.IntegerField(primary_key=True, serialize=False)),
                ('steering_type_name', models.CharField(max_length=100)),
                ('culture_id', models.CharField(default='en-US', max_length=10)),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Steering Type',
                'verbose_name_plural': 'Steering Types',
                'db_table': 'vcdb_steeringtype',
                'ordering': ['steering_type_name'],
            },
        ),
        migrations.CreateModel(
            name='Transmission',
            fields=[
                ('transmission_id', models.IntegerField(primary_key=True, serialize=False)),
                ('transmission_base_id', models.IntegerField()),
                ('transmission_mfr_code_id', models.IntegerField()),
                ('transmission_elec_controlled_id', models.IntegerField()),
                ('transmission_mfr_id', models.IntegerField()),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Transmission',
                'verbose_name_plural': 'Transmissions',
                'db_table': 'vcdb_transmission',
                'ordering': ['transmission_id'],
            },
        ),
        migrations.CreateModel(
            name='TransmissionBase',
            fields=[
                ('transmission_base_id', models.IntegerField(primary_key=True, serialize=False)),
                ('transmission_type_id', models.IntegerField()),
                ('transmission_num_speeds_id', models.IntegerField()),
                ('transmission_control_type_id', models.IntegerField()),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Transmission Base',
                'verbose_name_plural': 'Transmission Bases',
                'db_table': 'vcdb_transmissionbase',
                'ordering': ['transmission_base_id'],
            },
        ),
        migrations.CreateModel(
            name='TransmissionControlType',
            fields=[
                ('transmission_control_type_id', models.IntegerField(primary_key=True, serialize=False)),
                ('transmission_control_type_name', models.CharField(max_length=100)),
                ('culture_id', models.CharField(default='en-US', max_length=10)),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Transmission Control Type',
                'verbose_name_plural': 'Transmission Control Types',
                'db_table': 'vcdb_transmissioncontroltype',
                'ordering': ['transmission_control_type_name'],
            },
        ),
        migrations.CreateModel(
            name='TransmissionMfrCode',
            fields=[
                ('transmission_mfr_code_id', models.IntegerField(primary_key=True, serialize=False)),
                ('transmission_mfr_code', models.CharField(max_length=50)),
                ('culture_id', models.CharField(default='en-US', max_length=10)),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Transmission Mfr Code',
                'verbose_name_plural': 'Transmission Mfr Codes',
                'db_table': 'vcdb_transmissionmfrcode',
                'ordering': ['transmission_mfr_code_id'],
            },
        ),
        migrations.CreateModel(
            name='TransmissionNumSpeeds',
            fields=[
                ('transmission_num_speeds_id', models.IntegerField(primary_key=True, serialize=False)),
                ('transmission_num_speeds', models.CharField(max_length=20)),
                ('culture_id', models.CharField(default='en-US', max_length=10)),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Transmission Num Speeds',
                'verbose_name_plural': 'Transmission Num Speeds',
                'db_table': 'vcdb_transmissionnumspeeds',
                'ordering': ['transmission_num_speeds_id'],
            },
        ),
        migrations.CreateModel(
            name='TransmissionType',
            fields=[
                ('transmission_type_id', models.IntegerField(primary_key=True, serialize=False)),
                ('transmission_type_name', models.CharField(max_length=100)),
                ('culture_id', models.CharField(default='en-US', max_length=10)),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Transmission Type',
                'verbose_name_plural': 'Transmission Types',
                'db_table': 'vcdb_transmissiontype',
                'ordering': ['transmission_type_name'],
            },
        ),
        migrations.CreateModel(
            name='Valves',
            fields=[
                ('valves_id', models.IntegerField(primary_key=True, serialize=False)),
                ('valves_per_engine', models.CharField(max_length=20)),
                ('culture_id', models.CharField(default='en-US', max_length=10)),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Valves',
                'verbose_name_plural': 'Valves',
                'db_table': 'vcdb_valves',
                'ordering': ['valves_id'],
            },
        ),
        migrations.CreateModel(
            name='VehicleType',
            fields=[
                ('vehicle_type_id', models.IntegerField(primary_key=True, serialize=False)),
                ('vehicle_type_name', models.CharField(max_length=100)),
                ('vehicle_type_group_id', models.IntegerField()),
                ('culture_id', models.CharField(default='en-US', max_length=10)),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Vehicle Type',
                'verbose_name_plural': 'Vehicle Types',
                'db_table': 'vcdb_vehicletype',
                'ordering': ['vehicle_type_name'],
            },
        ),
        migrations.CreateModel(
            name='VehicleTypeGroup',
            fields=[
                ('vehicle_type_group_id', models.IntegerField(primary_key=True, serialize=False)),
                ('vehicle_type_group_name', models.CharField(max_length=100)),
                ('culture_id', models.CharField(default='en-US', max_length=10)),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Vehicle Type Group',
                'verbose_name_plural': 'Vehicle Type Groups',
                'db_table': 'vcdb_vehicletypegroup',
                'ordering': ['vehicle_type_group_name'],
            },
        ),
        migrations.CreateModel(
            name='WheelBase',
            fields=[
                ('wheel_base_id', models.IntegerField(primary_key=True, serialize=False)),
                ('wheel_base', models.CharField(max_length=50)),
                ('wheel_base_metric', models.CharField(max_length=50)),
                ('source', models.CharField(blank=True, max_length=50)),
                ('culture_id', models.CharField(default='en-US', max_length=10)),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Wheel Base',
                'verbose_name_plural': 'Wheel Bases',
                'db_table': 'vcdb_wheelbase',
                'ordering': ['wheel_base_id'],
            },
        ),
        migrations.CreateModel(
            name='VehicleToBodyConfig',
            fields=[
                ('vehicle_to_body_config_id', models.IntegerField(primary_key=True, serialize=False)),
                ('body_style_config_id', models.IntegerField()),
                ('bed_config_id', models.IntegerField()),
                ('mfr_body_code_id', models.IntegerField()),
                ('wheelbase_id', models.IntegerField()),
                ('source', models.CharField(max_length=50)),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('vehicle_id', models.ForeignKey(db_column='vehicle_id', on_delete=django.db.models.deletion.CASCADE, to='vcdb.vehicle')),
            ],
            options={
                'verbose_name': 'Vehicle to Body Config',
                'verbose_name_plural': 'Vehicle to Body Configs',
                'db_table': 'vcdb_vehicletobodyconfig',
                'ordering': ['vehicle_to_body_config_id'],
            },
        ),
        migrations.CreateModel(
            name='VehicleToWheelbase',
            fields=[
                ('vehicle_to_wheelbase_id', models.IntegerField(primary_key=True, serialize=False)),
                ('wheelbase_id', models.IntegerField()),
                ('source', models.CharField(max_length=50)),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('vehicle_id', models.ForeignKey(db_column='vehicle_id', on_delete=django.db.models.deletion.CASCADE, to='vcdb.vehicle')),
            ],
            options={
                'verbose_name': 'Vehicle to Wheelbase',
                'verbose_name_plural': 'Vehicle to Wheelbases',
                'db_table': 'vcdb_vehicletowheelbase',
                'ordering': ['vehicle_to_wheelbase_id'],
                'unique_together': {('vehicle_id', 'wheelbase_id')},
            },
        ),
        migrations.CreateModel(
            name='VehicleToTransmission',
            fields=[
                ('vehicle_to_transmission_id', models.IntegerField(primary_key=True, serialize=False)),
                ('transmission_id', models.IntegerField()),
                ('source', models.CharField(max_length=50)),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('vehicle_id', models.ForeignKey(db_column='vehicle_id', on_delete=django.db.models.deletion.CASCADE, to='vcdb.vehicle')),
            ],
            options={
                'verbose_name': 'Vehicle to Transmission',
                'verbose_name_plural': 'Vehicle to Transmissions',
                'db_table': 'vcdb_vehicletotransmission',
                'ordering': ['vehicle_to_transmission_id'],
                'unique_together': {('vehicle_id', 'transmission_id')},
            },
        ),
        migrations.CreateModel(
            name='VehicleToSteeringConfig',
            fields=[
                ('vehicle_to_steering_config_id', models.IntegerField(primary_key=True, serialize=False)),
                ('steering_config_id', models.IntegerField()),
                ('source', models.CharField(max_length=50)),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('vehicle_id', models.ForeignKey(db_column='vehicle_id', on_delete=django.db.models.deletion.CASCADE, to='vcdb.vehicle')),
            ],
            options={
                'verbose_name': 'Vehicle to Steering Config',
                'verbose_name_plural': 'Vehicle to Steering Configs',
                'db_table': 'vcdb_vehicletosteeringconfig',
                'ordering': ['vehicle_to_steering_config_id'],
                'unique_together': {('vehicle_id', 'steering_config_id')},
            },
        ),
        migrations.CreateModel(
            name='VehicleToSpringTypeConfig',
            fields=[
                ('vehicle_to_spring_type_config_id', models.IntegerField(primary_key=True, serialize=False)),
                ('spring_type_config_id', models.IntegerField()),
                ('source', models.CharField(max_length=50)),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('vehicle_id', models.ForeignKey(db_column='vehicle_id', on_delete=django.db.models.deletion.CASCADE, to='vcdb.vehicle')),
            ],
            options={
                'verbose_name': 'Vehicle to Spring Type Config',
                'verbose_name_plural': 'Vehicle to Spring Type Configs',
                'db_table': 'vcdb_vehicletospringtypeconfig',
                'ordering': ['vehicle_to_spring_type_config_id'],
                'unique_together': {('vehicle_id', 'spring_type_config_id')},
            },
        ),
        migrations.CreateModel(
            name='VehicleToMfrBodyCode',
            fields=[
                ('vehicle_to_mfr_body_code_id', models.IntegerField(primary_key=True, serialize=False)),
                ('mfr_body_code_id', models.IntegerField()),
                ('source', models.CharField(max_length=50)),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('vehicle_id', models.ForeignKey(db_column='vehicle_id', on_delete=django.db.models.deletion.CASCADE, to='vcdb.vehicle')),
            ],
            options={
                'verbose_name': 'Vehicle to Mfr Body Code',
                'verbose_name_plural': 'Vehicle to Mfr Body Codes',
                'db_table': 'vcdb_vehicletomfrbodycode',
                'ordering': ['vehicle_to_mfr_body_code_id'],
                'unique_together': {('vehicle_id', 'mfr_body_code_id')},
            },
        ),
        migrations.CreateModel(
            name='VehicleToClass',
            fields=[
                ('vehicle_to_class_id', models.IntegerField(primary_key=True, serialize=False)),
                ('class_id', models.IntegerField()),
                ('source', models.CharField(max_length=50)),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('vehicle_id', models.ForeignKey(db_column='vehicle_id', on_delete=django.db.models.deletion.CASCADE, to='vcdb.vehicle')),
            ],
            options={
                'verbose_name': 'Vehicle to Class',
                'verbose_name_plural': 'Vehicle to Classes',
                'db_table': 'vcdb_vehicletoclass',
                'ordering': ['vehicle_to_class_id'],
                'unique_together': {('vehicle_id', 'class_id')},
            },
        ),
        migrations.CreateModel(
            name='VehicleToBrakeConfig',
            fields=[
                ('vehicle_to_brake_config_id', models.IntegerField(primary_key=True, serialize=False)),
                ('brake_config_id', models.IntegerField()),
                ('source', models.CharField(max_length=50)),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('vehicle_id', models.ForeignKey(db_column='vehicle_id', on_delete=django.db.models.deletion.CASCADE, to='vcdb.vehicle')),
            ],
            options={
                'verbose_name': 'Vehicle to Brake Config',
                'verbose_name_plural': 'Vehicle to Brake Configs',
                'db_table': 'vcdb_vehicletobrakeconfig',
                'ordering': ['vehicle_to_brake_config_id'],
                'unique_together': {('vehicle_id', 'brake_config_id')},
            },
        ),
        migrations.CreateModel(
            name='VehicleToBedConfig',
            fields=[
                ('vehicle_to_bed_config_id', models.IntegerField(primary_key=True, serialize=False)),
                ('bed_config_id', models.IntegerField()),
                ('source', models.CharField(max_length=50)),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('vehicle_id', models.ForeignKey(db_column='vehicle_id', on_delete=django.db.models.deletion.CASCADE, to='vcdb.vehicle')),
            ],
            options={
                'verbose_name': 'Vehicle to Bed Config',
                'verbose_name_plural': 'Vehicle to Bed Configs',
                'db_table': 'vcdb_vehicletobedconfig',
                'ordering': ['vehicle_to_bed_config_id'],
                'unique_together': {('vehicle_id', 'bed_config_id')},
            },
        ),
    ]
