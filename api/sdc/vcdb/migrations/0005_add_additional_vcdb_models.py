# Generated by Django 4.2.3 on 2025-10-17 09:40

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('vcdb', '0004_year_alter_basevehicle_year_id'),
    ]

    operations = [
        migrations.CreateModel(
            name='Abbreviation',
            fields=[
                ('abbreviation', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=255)),
                ('long_description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Abbreviation',
                'verbose_name_plural': 'Abbreviations',
                'db_table': 'vcdb_abbreviation',
                'ordering': ['abbreviation'],
            },
        ),
        migrations.CreateModel(
            name='Aspiration',
            fields=[
                ('aspiration_id', models.IntegerField(primary_key=True, serialize=False)),
                ('aspiration_name', models.CharField(max_length=100)),
                ('culture_id', models.CharField(default='en-US', max_length=10)),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Aspiration',
                'verbose_name_plural': 'Aspirations',
                'db_table': 'vcdb_aspiration',
                'ordering': ['aspiration_name'],
            },
        ),
        migrations.CreateModel(
            name='BedConfig',
            fields=[
                ('bed_config_id', models.IntegerField(primary_key=True, serialize=False)),
                ('bed_length_id', models.IntegerField()),
                ('bed_type_id', models.IntegerField()),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Bed Config',
                'verbose_name_plural': 'Bed Configs',
                'db_table': 'vcdb_bedconfig',
                'ordering': ['bed_config_id'],
            },
        ),
        migrations.CreateModel(
            name='BedLength',
            fields=[
                ('bed_length_id', models.IntegerField(primary_key=True, serialize=False)),
                ('bed_length', models.CharField(max_length=20)),
                ('bed_length_metric', models.CharField(max_length=20)),
                ('culture_id', models.CharField(default='en-US', max_length=10)),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Bed Length',
                'verbose_name_plural': 'Bed Lengths',
                'db_table': 'vcdb_bedlength',
                'ordering': ['bed_length_id'],
            },
        ),
        migrations.CreateModel(
            name='BedType',
            fields=[
                ('bed_type_id', models.IntegerField(primary_key=True, serialize=False)),
                ('bed_type_name', models.CharField(max_length=100)),
                ('culture_id', models.CharField(default='en-US', max_length=10)),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Bed Type',
                'verbose_name_plural': 'Bed Types',
                'db_table': 'vcdb_bedtype',
                'ordering': ['bed_type_name'],
            },
        ),
        migrations.CreateModel(
            name='BrakeABS',
            fields=[
                ('brake_abs_id', models.IntegerField(primary_key=True, serialize=False)),
                ('brake_abs_name', models.CharField(max_length=100)),
                ('culture_id', models.CharField(default='en-US', max_length=10)),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Brake ABS',
                'verbose_name_plural': 'Brake ABS',
                'db_table': 'vcdb_brakeabs',
                'ordering': ['brake_abs_name'],
            },
        ),
        migrations.CreateModel(
            name='BrakeConfig',
            fields=[
                ('brake_config_id', models.IntegerField(primary_key=True, serialize=False)),
                ('front_brake_type_id', models.IntegerField()),
                ('rear_brake_type_id', models.IntegerField()),
                ('brake_system_id', models.IntegerField()),
                ('brake_abs_id', models.IntegerField()),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Brake Config',
                'verbose_name_plural': 'Brake Configs',
                'db_table': 'vcdb_brakeconfig',
                'ordering': ['brake_config_id'],
            },
        ),
        migrations.CreateModel(
            name='BrakeSystem',
            fields=[
                ('brake_system_id', models.IntegerField(primary_key=True, serialize=False)),
                ('brake_system_name', models.CharField(max_length=100)),
                ('culture_id', models.CharField(default='en-US', max_length=10)),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Brake System',
                'verbose_name_plural': 'Brake Systems',
                'db_table': 'vcdb_brakesystem',
                'ordering': ['brake_system_name'],
            },
        ),
        migrations.CreateModel(
            name='BrakeType',
            fields=[
                ('brake_type_id', models.IntegerField(primary_key=True, serialize=False)),
                ('brake_type_name', models.CharField(max_length=100)),
                ('culture_id', models.CharField(default='en-US', max_length=10)),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Brake Type',
                'verbose_name_plural': 'Brake Types',
                'db_table': 'vcdb_braketype',
                'ordering': ['brake_type_name'],
            },
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('class_id', models.IntegerField(primary_key=True, serialize=False)),
                ('class_name', models.CharField(max_length=100)),
                ('culture_id', models.CharField(default='en-US', max_length=10)),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Class',
                'verbose_name_plural': 'Classes',
                'db_table': 'vcdb_class',
                'ordering': ['class_name'],
            },
        ),
        migrations.CreateModel(
            name='CylinderHeadType',
            fields=[
                ('cylinder_head_type_id', models.IntegerField(primary_key=True, serialize=False)),
                ('cylinder_head_type_name', models.CharField(max_length=100)),
                ('culture_id', models.CharField(default='en-US', max_length=10)),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Cylinder Head Type',
                'verbose_name_plural': 'Cylinder Head Types',
                'db_table': 'vcdb_cylinderheadtype',
                'ordering': ['cylinder_head_type_name'],
            },
        ),
        migrations.CreateModel(
            name='ElecControlled',
            fields=[
                ('elec_controlled_id', models.IntegerField(primary_key=True, serialize=False)),
                ('elec_controlled', models.CharField(max_length=10)),
                ('culture_id', models.CharField(default='en-US', max_length=10)),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Electronic Controlled',
                'verbose_name_plural': 'Electronic Controlled',
                'db_table': 'vcdb_eleccontrolled',
                'ordering': ['elec_controlled'],
            },
        ),
        migrations.CreateModel(
            name='EngineBase',
            fields=[
                ('engine_base_id', models.IntegerField(primary_key=True, serialize=False)),
                ('liter', models.CharField(blank=True, max_length=20)),
                ('cc', models.CharField(blank=True, max_length=20)),
                ('cid', models.CharField(blank=True, max_length=20)),
                ('cylinders', models.CharField(blank=True, max_length=10)),
                ('block_type', models.CharField(blank=True, max_length=10)),
                ('eng_bore_in', models.CharField(blank=True, max_length=20)),
                ('eng_bore_metric', models.CharField(blank=True, max_length=20)),
                ('eng_stroke_in', models.CharField(blank=True, max_length=20)),
                ('eng_stroke_metric', models.CharField(blank=True, max_length=20)),
                ('effective_date_time', models.DateTimeField()),
                ('end_date_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Engine Base',
                'verbose_name_plural': 'Engine Bases',
                'db_table': 'vcdb_enginebase',
                'ordering': ['engine_base_id'],
            },
        ),
    ]
