# Generated by Django 5.0.7 on 2025-09-10 13:37

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DataUploadSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('vcdb_file', models.FileField(blank=True, help_text='VCDB/Vehicle data file', null=True, upload_to='data_uploads/vcdb/')),
                ('products_file', models.FileField(blank=True, help_text='Products/Parts data file', null=True, upload_to='data_uploads/products/')),
                ('vcdb_filename', models.CharField(blank=True, max_length=255)),
                ('products_filename', models.CharField(blank=True, max_length=255)),
                ('vcdb_file_size', models.BigIntegerField(default=0)),
                ('products_file_size', models.BigIntegerField(default=0)),
                ('status', models.CharField(choices=[('uploading', 'Uploading'), ('uploaded', 'Uploaded'), ('processing', 'Processing'), ('completed', 'Completed'), ('error', 'Error')], default='uploading', max_length=20)),
                ('vcdb_valid', models.BooleanField(default=False)),
                ('products_valid', models.BooleanField(default=False)),
                ('validation_errors', models.JSONField(blank=True, default=dict)),
                ('vcdb_records', models.IntegerField(default=0)),
                ('products_records', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Data Upload Session',
                'verbose_name_plural': 'Data Upload Sessions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DataProcessingLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('started', 'Started'), ('completed', 'Completed'), ('failed', 'Failed')], max_length=20)),
                ('message', models.TextField(blank=True)),
                ('details', models.JSONField(blank=True, default=dict)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='processing_logs', to='data_uploads.datauploadsession')),
            ],
            options={
                'verbose_name': 'Data Processing Log',
                'verbose_name_plural': 'Data Processing Logs',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='FileValidationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_type', models.CharField(choices=[('vcdb', 'VCDB'), ('products', 'Products')], max_length=20)),
                ('validation_type', models.CharField(max_length=50)),
                ('is_valid', models.BooleanField()),
                ('message', models.TextField()),
                ('details', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='validation_logs', to='data_uploads.datauploadsession')),
            ],
            options={
                'verbose_name': 'File Validation Log',
                'verbose_name_plural': 'File Validation Logs',
                'ordering': ['-created_at'],
            },
        ),
    ]
